#!/usr/bin/env node
const debug = require('debug')('biopocket:server');
const http = require('http');

const app = require('../server');
const config = require('../config');

// Set the port to connect to.
app.set('port', config.port);

// Create an HTTP server.
const server = http.createServer(app);

// Listen on the provided port, on all network interfaces.
server.listen(app.get('port'));
server.on('error', onError);
server.on('listening', onListening);

// Event listener for HTTP server "error" event
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof(port) === 'string' ? `Pipe ${port}` : `Port ${port}`;

  // Handle specific errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Event listener for the HTTP server's "listening" event
function onListening() {

  const addr = server.address();
  const bind = typeof addr === 'string' ? 'pipe ' + addr : 'port ' + addr.port;

  debug(`Listening on ${bind}`);
}
